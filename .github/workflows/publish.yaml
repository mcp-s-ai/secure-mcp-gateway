name: Publish

on:
  push:
    branches: [main, npm-publish-branch]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip-publish]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"
          cache-dependency-path: ./package-lock.json
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump version and create tag
        id: version
        run: |
          # Check if there are changes since last tag
          if git describe --tags --exact-match HEAD 2>/dev/null; then
            echo "No new changes to publish"
            echo "should_publish=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Bump patch version
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "should_publish=true" >> $GITHUB_OUTPUT

          # Commit version bump
          git add package.json package-lock.json
          git commit -m "chore: bump version to $NEW_VERSION [skip-publish]"
          git tag "v$NEW_VERSION"

          # Push changes and tags
          git push origin HEAD
          git push origin "v$NEW_VERSION"

      - name: Publish to NPM
        if: steps.version.outputs.should_publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version.outputs.should_publish == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          name: Release v${{ steps.version.outputs.new_version }}
          draft: false
          prerelease: false
          body: |
            ## Changes in v${{ steps.version.outputs.new_version }}

            - Automated release from ${{ github.ref_name }} branch
            - Install with: `npx @mcp-s/secure-mcp-gateway`
